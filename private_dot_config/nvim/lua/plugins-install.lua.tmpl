local lazypath = vim.fn.stdpath("data") .. "/lazy/lazy.nvim"
if not vim.loop.fs_stat(lazypath) then
  vim.fn.system({
    "git",
    "clone",
    "--filter=blob:none",
    "https://github.com/folke/lazy.nvim.git",
    "--branch=stable", -- latest stable release
    lazypath,
  })
end
vim.opt.rtp:prepend(lazypath)



return require('lazy').setup({

    'christoomey/vim-tmux-navigator',
    'hoob3rt/lualine.nvim', 
   {
    'akinsho/nvim-bufferline.lua',
    dependencies = 'kyazdani42/nvim-web-devicons',
  },

    'nvim-telescope/telescope.nvim',
    'nvim-lua/plenary.nvim', 'kyazdani42/nvim-web-devicons',


  -- LSP
   {
    'williamboman/mason.nvim',
    'williamboman/mason-lspconfig.nvim',
    'neovim/nvim-lspconfig',
  },
   { 'nvim-treesitter/nvim-treesitter', build = ':TSUpdate' },
   'nvim-lua/lsp-status.nvim',
   'folke/trouble.nvim',
   'ray-x/lsp_signature.nvim',

   { 'jose-elias-alvarez/null-ls.nvim', dependencies = { 'nvim-lua/plenary.nvim' } },

  -- COMMENTS
   'numToStr/Comment.nvim',

  -- cmp
   'hrsh7th/cmp-nvim-lsp',
   'hrsh7th/cmp-buffer',
   'hrsh7th/cmp-path',
   'hrsh7th/cmp-cmdline',
   'hrsh7th/nvim-cmp',

  -- pair
   'windwp/nvim-autopairs',

  -- snippets
   'hrsh7th/cmp-vsnip',
   {
   "L3MON4D3/LuaSnip",
    version = "v2.*", 
	build = "make install_jsregexp"
   },
   'saadparwaiz1/cmp_luasnip',
   'rafamadriz/friendly-snippets',

  -- Java
   'mfussenegger/nvim-jdtls',
   'mfussenegger/nvim-dap',

  -- ui
   'kyazdani42/nvim-tree.lua',
   'lukas-reineke/indent-blankline.nvim',

   {
    'folke/which-key.nvim',
    config = function()
      require('which-key').setup()
    end,
  },

{{- if eq .type_machine "home" "work"}}
  -- Theme
  'rebelot/kanagawa.nvim', 

  -- neorg managing
   {
    'nvim-neorg/neorg',
    build = ':Neorg sync-parsers', -- This is the important bit!
    dependencies = 'nvim-lua/plenary.nvim',
  },

  -- Git
   { 'lewis6991/gitsigns.nvim', dependencies = { 'nvim-lua/plenary.nvim' } },
   { 'NeogitOrg/neogit', dependencies = 'nvim-lua/plenary.nvim' },
{{- end }}

})
