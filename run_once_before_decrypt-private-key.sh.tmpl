#!/bin/sh

set -o pipefail

echo {{ .type_machine }}

sudo apt-get update -y
sudo apt-get upgrade -y

sudo apt-get install -y \
    python3 \
    fish \
    ripgrep \
    age \
    exa \
    git \
    tmux

{{ if eq .type_machine "home" "work"}}

sudo apt-get install -y \
    zathura \
    feh \
    kitty \
    htop \
    imagemagick \
    scrot \
    xinit \
    rofi \
    xclip \
    i3lock \
    sxhkd \
    libpulse-dev \
    libxss-dev \
    libxcb-screensaver0-dev \
    pulseaudio \
    pavucontrol \
    bspwm \
    picom \
    polybar \
    lm-sensors \
    fwupd \
    mpv \
    neofetch \
    thermald \
    python3-pip \
    python3-setuptools \
    python3-venv \
    software-properties-common \
    jsonnet \

if [ ! -f "${HOME}/key.txt" ]; then
    age --decrypt --output "${HOME}/key.txt" "{{ .chezmoi.sourceDir }}/key.txt.age"
    chmod 600 "${HOME}/key.txt"
fi

sudo chsh -s "$(which fish)" "$(whoami)"

# TERMINAL


## rust
if ! command -v cargo >/dev/null; then
  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
fi

## starship
if ! command -v starship >/dev/null; then
  $HOME/.cargo/bin/cargo install starship --locked
fi

## tmux plugin mamanger
git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm

# KUBERNETES
## kubectl
if ! command -v kubectl >/dev/null; then
  curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
  sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
  rm  kubectl
fi

## kubectx
if ! command -v kubectx >/dev/null; then
  curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
  sudo git clone https://github.com/ahmetb/kubectx /opt/kubectx
  rm -rf kubectx
  sudo ln -s /opt/kubectx/kubectx /usr/local/bin/kubectx
  sudo ln -s /opt/kubectx/kubens /usr/local/bin/kubens

fi


function setup_asdf() {
    asdf plugin add python || true
    asdf plugin add nodejs || true
    asdf plugin add rust || true
    asdf plugin add golang || true
    # run twice; nodejs will fail the first time due do an alias issue
    asdf install || asdf install
    pip install --upgrade pip
    npm install -g npm
}

# # asdf TODO
if ! command -v asdf >/dev/null; then
    sudo apt install -y curl git
    git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch master || true
    export PATH=$PATH:$HOME/.asdf/bin/
    mkdir -p ~/.config/fish/completions
    ln -s ~/.asdf/completions/asdf.fish ~/.config/fish/completions
fi

setup_asdf
{{ end }}

## nvim
if ! command -v nvim >/dev/null; then
    sudo apt install -y ninja-build gettext cmake unzip curl cmake build-essential 
    git clone -b release-0.9 https://github.com/neovim/neovim || true
    pushd neovim
    make CMAKE_BUILD_TYPE=Release
    sudo make install
    popd
    rm -rf neovim
    # install after to make sure it doesn't install nvim
    sudo apt-get install -y python3-pynvim
fi
